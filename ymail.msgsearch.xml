<?xml version="1.0" encoding="UTF-8"?>
<i:table xmlns:i="http://query.yahooapis.com/v1/schema/internalTable.xsd" xmlns="http://query.yahooapis.com/v1/schema/table.xsd" securityLevel="user">
  <meta>
    <author>Yahoo! Inc.</author>
    <sampleQuery>select * from {table} where numMid='3'</sampleQuery>
    <sampleQuery>select * from {table} where query='Yahoo'</sampleQuery>
    <description> This table helps you to list messages or search content in your mailbox </description>
  </meta>
  <execute><![CDATA[
	y.include("http://github.com/ramiyer/ymailtables/raw/master/json2.js");
	
	
	function searchMessagesReq(){


		/*
			'"to": "' +inputs['to']+ '"' + ',' +
			'"from": "' +inputs['from']+ '"' + ',' +
			'"cc": "' +inputs['cc']+ '"' + ',' +
			'"bcc": "' +inputs['bcc']+ '"' + ',' +
			'"subject": "' +inputs['subject']+ '"' + ',' +
			'"attachmenttype": "' +inputs['attachmenttype']+ '"' + ',' +
			'"attachmentname": "' +inputs['attachmentname']+ '"' + ',' +
			'"attachment": "' +inputs['attachment']+ '"' + ',' +
			'"attachmentlanguages": "' +inputs['attachmentlanguages']+ '"' + ',' +
			'"attachmentcount": "' +inputs['attachmentcount']+ '"' + ',' +
			'"flags": "' +inputs['flags']+ '"' + ',' +
		*/
		var ymwsMethod = "SearchMessages";

		var searchParams = new String();	

		if (inputs['to'] != null){
			searchParams += 'to:"' +inputs['to']+ '" '; 
		}
		//Using fr instead of from because YQL query gets confused.
		if (inputs['fr'] != null){
			searchParams += 'from:"' +inputs['fr']+ '" ';
		}
		if (inputs['cc'] != null){
			searchParams += 'cc:"' +inputs['cc'] + '" ';
		}
		if (inputs['bcc'] != null){
			searchParams += 'bcc:"' +inputs['bcc'] + '" ' ;
		}
		if (inputs['subject'] != null){
			searchParams += 'subject:"' +inputs['subject']+ '" '  ;
		}
		if (inputs['attachmenttype'] != null){
			searchParams += 'attachmenttype:"' +inputs['attachmenttype'] + '" ' ;
		}
		if (inputs['attachmentname'] != null){
			searchParams += 'attachmentname:"' +inputs['attachmentname'] + '" ';
		}
		if (inputs['attachment'] != null){
			searchParams += 'attachment:"' +escape(inputs['attachment']) +'"' + " ";
		}
		if (inputs['attachmentlanguages'] != null){
			searchParams += 'attachmentlanguages:"' +escape(inputs['attachmentlanguages'])+ '"' + " " ;
		}
		if (inputs['attachmentcount'] != null){
			searchParams += 'attachmentcount:"' +escape(inputs['attachmentcount']) + '" ';
		}
		if (inputs['flags'] != null){
			searchParams += 'flags:"' +escape(inputs['flags']) +'" ';
		}
		if (inputs["fid"] != null){
			searchParams += 'folder:' +escape(inputs['fid'])+ ' ';	
		}
		if (inputs['query'] != null){
			searchParams += inputs['query'];
		}

		var jsonStr = JSON.stringify(searchParams);
		//y.log(jsonStr);

		// get parameters for the given cascade method
		var params = '[{' +
				'     "search": {' +
									'"query":' +jsonStr+ 
								'}' +',' +
					 '"numInfo": "' +inputs['numInfo'] +'",' + 
					 '"numMid": "' +inputs['numMid']+ '",' +
					 '"sortKey": "'+inputs['sortKey']+ '",' +
					 '"sortOrder": "' +inputs['sortOrder']+ '",' +
					 '"refineBy": "' +inputs['refineBy']+ '"' +
				 '}]';


		var content = '{' +
		            '"method" : "' + ymwsMethod + '",' +
		            '"params" : ' + params +
	        	  '}';

		return content;

	}
	
	
	/*
	 * Function called for any ListMessage api call
	 */

	function listMessagesReq(){

		var method = 'ListMessages';
		var params = '[{}]';


		//If Null then set to Inbox - This creates a problem when executed with Search hence not having any default value for fid in inputs element
		if(inputs['fid'] == null){
			inputs['fid'] = "Inbox";
		}

		var fid = escape(inputs['fid']);

		params = '[{' +
	                 '    "fid"           : "' + fid + '",' +
	                 '    "startMid"      : ' + inputs['startMid'] + ',' +
	                 '    "numMid"        : ' + inputs['numMid'] + ',' +
	                 '    "startInfo"     : ' + inputs['startInfo'] + ',' +
	                 '    "numInfo"       : ' + inputs['numInfo'] +
	                 '}]';

		content = '{' +
		           		'"method" : "' + method + '",' +
			          	'"params" : ' + params +
			      '}';

		var listMsgReq = '{' +
			            	'"method" : "' + method + '",' +
			            	'"params" : ' + params +
			            '}';

		return listMsgReq;
	}
	
	function postSearchFilter(response){
		
		y.log("inside postSearchFilter");
		var removeItemsFromSearchResponse = ["folderInfo","inboxservices"];
		
		//loop through the response and remove the items added in the array. 
		for (var i=0 ; i < response.length ; i++){
			y.log(response[i]);
			y.log(response[i].toString());
			var obj = response[i];
			for(var key in obj){
	            var attrName = key;
	            var attrValue = obj[key];
				y.log(attrName);
				y.log(attrValue);
			}
		}
		
		var filteredResponse = response;
		
		return filteredResponse;
	
	}

]]></execute>
   <i:bindings>
   <i:select itemPath="json.result" produces="JSON" auth="yahooOauth">
      <urls>
        <url>http://mail.yahooapis.com/ws/mail/v1.1/jsonrpc</url>
      </urls>
      <inputs>
	  	    <key id="query" type='xs:string' paramType='variable' />
		    <key id="fr" type='xs:string' paramType='variable' />
	   	    <key id="to" type='xs:string' paramType='variable' />
	 	    <key id="subject" type='xs:string' paramType='variable'/>
		    <key id="cc" type='xs:string' paramType='variable' />
	  	    <key id="bcc" type='xs:string' paramType='variable' />
		    <key id="flags" type='xs:string' paramType='variable' />
		    <key id="attachment" type='xs:string' paramType='variable' />
		    <key id="attachmentcount" type='xs:string' paramType='variable' />
		    <key id="attachmenttype" type='xs:string' paramType='variable' />
		    <key id="attachmentname" type='xs:string' paramType='variable' />
		    <key id="attachmentlanguages" type='xs:string' paramType='variable' />
		    <key id="searchtype" type='xs:string' paramType='variable' default='whole' /> 
		    <key id="startMid" type='xs:string' paramType='variable' default='0' />
		    <key id="numMid" type='xs:string' paramType='variable' default='50' />
		    <key id="startInfo" type='xs:string' paramType='variable' default='0' />
		    <key id="numInfo" type='xs:string' paramType='variable' default='50' />
		    <key id="fid" type='xs:string' paramType='variable' />
		    <key id="mid" type='xs:string' paramType='variable' />
		    <key id="pid" type='xs:string' paramType='variable' />
		    <key id="search" type='xs:string' paramType='variable' />
		    <key id="refineBy" type='xs:string' paramType='variable' default='all' />
		    <key id="groupBy" type='xs:string' paramType='variable' default='unRead' />
		    <key id="sortKey" type='xs:string' paramType='variable' default='date' />
		    <key id="sortOrder" type='xs:string' paramType='variable' default='up' />
	  </inputs>
	  <execute><![CDATA[
		
		//y.include("http://github.com/ramiyer/ymailtables/raw/master/messages.js");
	//	y.include("http://github.com/ramiyer/ymailtables/raw/master/json2.js");
	
        	//Intialization
        	var content = '';
        	var params = '[{}]';
		var checkForSearchParams = false;

		//Check if there are any search parameters in the request query
		if(inputs.query != null || inputs.fr != null || inputs.to != null || inputs.subject != null || inputs.cc != null || inputs.bcc != null || inputs.flags != null || inputs.attachment != null || inputs.attachmentcount != null || inputs.attachmentname != null || inputs.attachmentlanguages != null || inputs.attachmenttype != null){
				
					checkForSearchParams = true;
	
		}
		
		//Call the appropriate method based on the flag value
		if (checkForSearchParams == true){
			content = searchMessagesReq();
		}else {
			content = listMessagesReq();
		}
    	
		var returned_response = request.post(content).response;
		y.log(checkForSearchParams);
		
		if(checkForSearchParams == true){
			returned_response = postSearchFilter(returned_response);
		}
		
		response.object = returned_response;

      ]]></execute>
   </i:select>
  </i:bindings>
</i:table>
